$background-color: #ffd2ad;
$background-dark-color: #27170b;
$text-default-color: #27170b;
$text-dark-color: #ffd2ad;

body {
  background-color: $background-color;
  font-family: monospace;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: $text-default-color;
}

body.dark-mode {
  background-color: $background-dark-color; // Dark mode background
  color: #ffd2ad; // Dark mode text
}

@mixin flex-center {
  position: absolute; /* or fixed if you want it to stay fixed on the screen */
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.5s ease-in-out;
}

.flex-center {
  @include flex-center();
}

.letter-solid {
  position: relative;
  font-size: 12ch;
  font-weight: 600;
  cursor: pointer;
  &::after {
    content: ""; // Pseudo-element for the underline
    position: absolute;
    bottom: 0; // Position at the bottom of the component
    width: 0; // Initial width
    height: 2px; // Thickness of the underline
    background-color: $text-default-color; // Underline color
    left: 50%; // Start from the center
    transform: translateX(-50%); // Center alignment
    transition: all 0.3s ease; // Smooth transition
  }

  &:hover::after {
    width: 54px; // Expand the underline to full width
  }
}

.animated-text {
  display: inline-block;
  font-family: monospace; // Typing effect looks better with monospace fonts
  white-space: nowrap; // Prevents text wrapping
  overflow: hidden; // Ensures the "typed" part is hidden initially
  max-width: fit-content;
  border-right: 2px solid $text-default-color; // Simulate the cursor
  animation:
    typing 2s steps(5),
    blink 0.7s step-end infinite;

  // Typing animation
  @keyframes typing {
    from {
      width: 0%; // Start with no visible characters
    }
    to {
      width: 19%; // Match the exact number of characters
    }
  }

  // Cursor blinking animation
  @keyframes blink {
    50% {
      border-color: transparent;
    }
  }

  &.dark-mode {
    border-right: 2px solid $text-dark-color; // Simulate the cursor
  }
}

.principle-name {
  position: absolute;
  margin-top: 180px;
  left: 50%; // Start from the center
  transform: translateX(-50%); // Center alignment

  white-space: nowrap; // Prevents text wrapping
  overflow: hidden;
  max-width: fit-content;
  border-right: 2px solid $text-default-color; // Simulate the cursor
  animation:
    appear 7s,
    border-fade 0.3s ease-out 1.5s forwards;

  &.dark-mode {
    border-right: 2px solid $text-dark-color; // Simulate the cursor
    animation:
      appear 7s,
      border-fade-dark-mode 0.3s ease-out 1.5s forwards;

    @keyframes border-fade-dark-mode {
      from {
        border-right-color: $text-dark-color; // Start with the border visible
      }
      to {
        border-right-color: transparent; // Fade out the border
      }
    }
  }
  // appear animation
  @keyframes appear {
    from {
      width: 0ch; // Start with no visible characters
    }
    to {
      width: 130%; // Match the exact number of characters
    }
  }

  // border-fade animation for making the border transparent
  @keyframes border-fade {
    from {
      border-right-color: $text-default-color; // Start with the border visible
    }
    to {
      border-right-color: transparent; // Fade out the border
    }
  }
}

.fade-out {
  animation: fade-out 0.5s ease-out forwards;

  @keyframes fade-out {
    from {
      opacity: 1;
    }

    to {
      transform: translateX(-500px); // Adjust as needed
      opacity: 0;
    }
  }
}

.fade-in {
  animation: fade-in 1s ease-out forwards;

  @keyframes fade-in {
    from {
      transform: translateX(500px) translateY(-50%); // Adjust as needed
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
}

.reset-animation {
  animation: none; // Clear any animations
  opacity: 1; // Reset to fully visible
  @include flex-center();
}

.fade-in-explanation {
  animation: fade-in-explanation 1s ease-out forwards;
}

.title-solid-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
}

.site-explanation {
  position: absolute;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.5s ease-in-out;
  text-align: center;
}

@keyframes fade-in-explanation {
  from {
    transform: translateX(500px) translateY(-50%); // Adjust as needed
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
